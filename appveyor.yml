version: 3.9.1.{build}

skip_branch_with_pr: false
skip_commits:
  message: /!nobuild/
skip_tags: false

environment:
  fast_finish: true

  matrix:
  - LUA: "lua 5.1"

platform:
  - x64

init:
  # If there is a newer build queued for the same PR, cancel this one.
  # The AppVeyor 'rollout builds' option is supposed to serve the same
  # purpose but is problematic because it tends to cancel builds pushed
  # directly to master instead of just PR builds.
  # credits: JuliaLang developers.
  - ps: if ($env:APPVEYOR_PULL_REQUEST_NUMBER -and $env:APPVEYOR_BUILD_NUMBER -ne ((Invoke-RestMethod `
        https://ci.appveyor.com/api/projects/$env:APPVEYOR_ACCOUNT_NAME/$env:APPVEYOR_PROJECT_SLUG/history?recordsNumber=50).builds | `
        Where-Object pullRequestId -eq $env:APPVEYOR_PULL_REQUEST_NUMBER)[0].buildNumber) { `
        throw "There are newer queued builds for this pull request, failing early." }

  # Check that we have the expected version and architecture for Python
#  - "python --version"
#  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""
#  - "pip --version"
  
  # Setup Git for push
#  - git config --global credential.helper store
#  - ps: Add-Content "$env:USERPROFILE\.git-credentials" "https://$($env:GH_TOKEN):x-oauth-basic@github.com`n"
#  - "git config --global user.email %GH_MAIL%"
#  - "git config --global user.name %APPVEYOR_ACCOUNT_NAME%"

#  - cmd: echo "%PYTHON% %PYTHON_VERSION% %PYTHON_ARCH%"
#  - cmd: echo "%APPVEYOR_BUILD_WORKER_IMAGE%"
#  - cmd: echo "%APPVEYOR_REPO_COMMIT_TIMESTAMP%"
  # - cmd: echo "%APPVEYOR_REPO_COMMIT_MESSAGE%"
  # - cmd: echo "%APPVEYOR_REPO_COMMIT_MESSAGE_EXTENDED%"
  
install:
  - cmd: choco install 7zip.commandline
  - set PATH=C:\Python27\Scripts;%LR_EXTERNAL%;%PATH%
  - if /I "%platform%"=="x64" set HR_TARGET=vs_64
  - if /I "%platform%"=="mingw" set HR_TARGET=mingw
  - if /I "%platform%"=="mingw" set PATH=C:\MinGW\bin;%PATH%

before_build:
  - if "%LUA%" EQU "lua 5.1" (luarocks show bit32 >nul 2>&1 || luarocks install bit32)
  - luarocks show luafilesystem >nul 2>&1 || luarocks install luafilesystem
  

cache:
  - C:\ProgramData\chocolatey\lib
  - C:\ProgramData\chocolatey\bin

build_script:
  - luarocks make rockspecs/lua-path-scm-0.rockspec 
  - cmd: echo "Hello World!"
  - cmd: moose_create.bat %APPVEYOR_REPO_COMMIT%
  - cmd: Moose_update_missions.bat missions
  - git clone https://github.com/FlightControl-Master/MOOSE_MISSIONS.git missions

test: off

artifacts:
  - path: '**\*.miz'
    name: miz
