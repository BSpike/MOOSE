version: 3.9.1.{build}
shallow_clone: true
skip_branch_with_pr: false
skip_commits:
  message: /!nobuild/
skip_tags: false

environment:
  access_token_documentation:
    secure: JVBVVL8uJUcLXN+48eRdELEeCGOGCCaMzCqutsUqNuaZ/KblG5ZTt7+LV4UKv/0f
  LUAROCKS_VER: 2.4.1
  LUA_VER: 5.1.5
  LUA: lua5.3
  matrix:
  - LUA_VER: 5.1.5

platform:
  - x64

init:
  - ps: if ($env:APPVEYOR_PULL_REQUEST_NUMBER -and $env:APPVEYOR_BUILD_NUMBER -ne ((Invoke-RestMethod `
        https://ci.appveyor.com/api/projects/$env:APPVEYOR_ACCOUNT_NAME/$env:APPVEYOR_PROJECT_SLUG/history?recordsNumber=50).builds | `
        Where-Object pullRequestId -eq $env:APPVEYOR_PULL_REQUEST_NUMBER)[0].buildNumber) { `
        throw "There are newer queued builds for this pull request, failing early." }
#  - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

install:
  - ps: . choco install 7zip.commandline
  - ps: . choco install lua51
  - ps: . choco install luarocks
  - ps: . refreshenv
  - call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat"
  - cmd: PATH = %PATH%;C:\ProgramData\chocolatey\lib\luarocks\luarocks-2.4.3-win32\systree\bin
  - cmd: set LUA_PATH = %LUA_PATH%;C:\ProgramData\chocolatey\lib\luarocks\luarocks-2.4.3-win32\systree\share\lua\5.1\?.lua;C:\ProgramData\chocolatey\lib\luarocks\luarocks-2.4.3-win32\systree\share\lua\5.1\?\init.lua
  - cmd: set LUA_CPATH = %LUA_CPATH%;C:\ProgramData\chocolatey\lib\luarocks\luarocks-2.4.3-win32\systree\lib\lua\5.1\?.dll 
#  - call .av\set_compiler_env.bat
#  - call .av\install.bat
  - cmd: luarocks install luasrcdiet
  - cmd: luarocks install checks
  - cmd: luarocks install luadocumentor
  - cmd: luarocks install luacheck

cache:
  - C:\ProgramData\chocolatey\lib
  - C:\ProgramData\chocolatey\bin
  - C:\ProgramData\chocolatey\lib\luarocks\luarocks-2.4.3-win32\systree
  


build_script:
   - cmd: md "Moose_Include_Static"
   - cmd: md "Moose_Include_Dynamic"
   - cmd: lua5.1 "Moose Setup\\Moose_Create.lua" "S" %APPVEYOR_REPO_COMMIT% "Moose Development\\Moose" "Moose Setup" "Moose_Include_Static" 
   - cmd: lua5.1 "Moose Setup\\Moose_Create.lua" "D" %APPVEYOR_REPO_COMMIT% "Moose Development\\Moose" "Moose Setup" "Moose_Include_Dynamic"
   - cmd: luasrcdiet --basic --opt-emptylines "Moose_Include_Static\Moose.lua"
   - ps: | 
       if( $env:appveyor_repo_branch -eq 'FC-Appveyor' )     
       {
         $apiUrl = 'https://ci.appveyor.com/api'
         $token = 'qts80b5kpq0ooj4x6vvw'
         $headers = @{
            "Authorization" = "Bearer $token"
            "Content-type" = "application/json"
            }
         $accountName = 'FlightControl-Master'
         $projectSlug = 'moose-docs'
         $branch = "master"


         # get project with last build details
         $project = Invoke-RestMethod -Method Get -Uri "$apiUrl/builds/$accountName/$projectSlug" -Headers $headers
         
         
       }
#   ps : >- 
#       if( $env:appveyor_repo_branch -eq 'master' )     
#       {  
#         . .av\build_missions.bat
#       }

test: off
# test_script:
#   - cmd: luacheck "Moose Development\Moose\moose.lua" "Moose Mission Setup\moose.lua"


artifacts:
  - path: 'Moose_Include_Static\*.lua'
    name: Static
  - path: 'Moose_Include_Dynamic\*.lua'
    name: Dynamic
  - path: 'Documentation'
    name: Documentation
#  - path: 'MOOSE_MISSIONS-Release\*.miz'
#    name: miz

on_finish:
#  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
